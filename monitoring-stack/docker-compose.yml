version: '3'

name: monitoring-stack

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    networks:
      - default

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    expose:
      - "3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/csv:/csv
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:rw
      - grafana-data:/var/lib/grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,marcusolsson-csv-datasource
      - GF_PLUGIN_MARCUSOLSSON_CSV_DATASOURCE_ALLOW_LOCAL_MODE=true
    networks:
      - default

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - "./alertmanager:/config"
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug 
    networks:
      - default

  loki:
    image: grafana/loki:2.6.1
    container_name: loki
    #restart: unless-stopped
    volumes:
      # directory must be created first, with uid:gid 10001:10001
      - ./loki/config/config.yml:/etc/loki/local-config.yaml
      - ./loki/data:/data/loki
      # to read container labels and logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default

  promtail:
    image: grafana/promtail:2.6.1
    container_name: promtail
    #restart: unless-stopped
    volumes:
      - /var/log/journal/:/var/log/journal/
      - /run/log/journal/:/run/log/journal/
      - /etc/machine-id:/etc/machine-id
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail/config/config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - default

volumes:
  prometheus-data:

  grafana-data:

  alertmanager-data:

  netdataconfig:
  netdatalib:
  netdatacache:

#  "monitoring-network" must be created already
# i.e: docker network create monitoring-network

networks:
  default:
    name: monitoring-network